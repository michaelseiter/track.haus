"""add_track_duration

Revision ID: afc02555f961
Revises: 3733d7048280
Create Date: 2025-03-29 17:33:40.607022+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'afc02555f961'
down_revision: Union[str, None] = '3733d7048280'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the new enum type first
    rating_enum = postgresql.ENUM('UNRATED', 'LIKE', 'BAN', 'TIRED', name='rating')
    rating_enum.create(op.get_bind())

    # Then alter the column with explicit USING clause
    op.execute('ALTER TABLE plays ALTER COLUMN rating TYPE rating USING rating::text::rating')
    op.alter_column('plays', 'rating', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First alter the column back
    op.alter_column('plays', 'rating',
               existing_type=sa.Enum('UNRATED', 'LIKE', 'BAN', 'TIRED', name='rating'),
               type_=postgresql.ENUM('UNRATED', 'LIKE', 'BAN', 'TIRED', name='rating_new'),
               nullable=True)
    
    # Then drop the enum type
    rating_enum = postgresql.ENUM('UNRATED', 'LIKE', 'BAN', 'TIRED', name='rating')
    rating_enum.drop(op.get_bind())
    # ### end Alembic commands ###
